apiVersion: kpt.dev/v1
kind: Kptfile
metadata:
  name: ueransim
  annotations:
    config.kubernetes.io/local-config: "true"
info:
  description: this package represents ueransim NFs, which are required to perfirm E2E conn testing
pipeline:
  mutators:
    - image: ghcr.io/kispaljr/upsert-resource:v1.1
      configMap:
        resources: |-
          apiVersion: kustomize.config.k8s.io/v1beta1
          kind: Kustomization
          metadata:
            annotations:
              internal.config.kubernetes.io/path: kustomization.yaml
          resources: []
    - image: gcr.io/kpt-fn/apply-replacements:v0.1.1
      configPath: apply-replacements-owner.yaml
    - image: gcr.io/kpt-fn/apply-replacements:v0.1.1
      configPath: apply-replacements-namespace.yaml
    - image: gcr.io/kpt-fn/set-namespace:v0.4.1
      configPath: package-context.yaml
    - image: docker.io/nephio/ueransim-deploy-fn:latest
    - image: docker.io/nephio/interface-fn:latest
    - image: docker.io/nephio/nad-fn:latest
    - image: docker.io/nephio/interface-fn:latest
    - image: docker.io/nephio/ueransim-deploy-fn:latest
    - image: gcr.io/kpt-fn/starlark:v0.4.3
      configMap:
        source: |-
          load("krmfn.star", "krmfn")
          def set_values(resources):
            kust = []
            for r in resources:
              if "config.kubernetes.io/local-config" not in r["metadata"]["annotations"]:
                if not krmfn.match_gvk(r, "kustomize.config.k8s.io/v1beta1", "Kustomization"):
                  kust.append(r["metadata"]["annotations"]["internal.config.kubernetes.io/path"])
            for r in resources:
              if krmfn.match_gvk(r, "kustomize.config.k8s.io/v1beta1", "Kustomization"):
                r["resources"] = kust
          set_values(ctx.resource_list["items"])
